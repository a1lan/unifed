#
# CS3099 Group A3
#

version: "3"

services:
  proxy:
    image: nginx:stable-alpine
    restart: unless-stopped
    networks:
      - proxy
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - ${BACKEND_PORT}:80

  mongo:
    image: mongo:4
    restart: unless-stopped
    networks:
      - database
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ADMIN_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ADMIN_PASSWORD}

  mongo-express:
    image: mongo-express
    restart: unless-stopped
    networks:
      - database
    ports:
      - ${MONGO_INSPECT_PORT}:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ADMIN_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ADMIN_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_INSPECT_USERNAME} 
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_INSPECT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
  
  backend:
    build: backend
    restart: unless-stopped
    command: npx nodemon src/unifed.ts
    networks:
      - proxy
      - database
    depends_on:
      - mongo
    volumes:
      - ./backend/src:/usr/src/unifed/src:ro
    environment:
      MONGO_HOSTNAME: mongo
      MONGO_PORT: 27017
      MONGO_DB: ${MONGO_DB}
      MONGO_USERNAME: ${MONGO_ADMIN_USERNAME}
      MONGO_PASSWORD: ${MONGO_ADMIN_PASSWORD}
  
  frontend:
    build: frontend
    restart: unless-stopped
    networks:
      - proxy
    volumes:
      - ./frontend/src:/usr/src/unifed/src:ro

networks:
  proxy:
    driver: bridge
  database:
    driver: bridge

volumes:
  mongo_data:
